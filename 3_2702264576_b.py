# -*- coding: utf-8 -*-
"""3_2702264576_B.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Bj_qQRTIEEoQUyGevRyJF10UG-2zaWF8
"""

import streamlit as st
import joblib
import numpy as np
import zipfile
import io

zip_file_path = 'rf_model_oop.zip'

with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    with zip_ref.open('rf_model_oop.pkl') as f:
        model = joblib.load(f)

def encode_input(data):
    # Label Encoding
    mealenc = {
        "Not Selected": 0,
        "Meal Plan 1": 1,
        "Meal Plan 2": 2,
        "Meal Plan 3": 3
    }
    data['type_of_meal_plan'] = mealenc.get(data['type_of_meal_plan'], 0)

    roomenc = {"Room_Type 1": 1,
               "Room_Type 2": 2,
               "Room_Type 3": 3,
               "Room_Type 4": 4,
               "Room_Type 5": 5,
               "Room_Type 6": 6,
               "Room_Type 7": 7,
    }
    data['room_type_reserved'] = roomenc.get(data['room_type_reserved'], 0)

    # One Hot Encoding
    market = ['Online', 'Offline', 'Corporate', 'Complementary','Aviation']
    for cat in market:
        data[f'market_segment_type_{cat}'] = 1 if data['market_segment_type'] == cat else 0
    del data['market_segment_type']

    return data


def make_prediction(features):
    input_array = np.array(features).reshape(1, -1)
    prediction = model.predict(input_array)
    return prediction[0]


def main():
    st.title('2702264576 B - Hotel Booking Status')

    booking_id = st.text_input('Booking ID', value='INN00001')
    no_of_adults = st.number_input('Jumlah Orang Dewasa', min_value=0, value=2)
    no_of_children = st.number_input('Jumlah Anak Kecil', min_value=0, value=0)
    no_of_weekend_nights = st.number_input('Jumlah Malam Akhir Pekan', min_value=0, value=1)
    no_of_week_nights = st.number_input('Jumlah Malam Hari Kerja', min_value=0, value=2)
    type_of_meal_plan = st.selectbox('Jenis Paket Makanan', ['Meal Plan 1', 'Meal Plan 2', 'Meal Plan 3', 'Not Selected'])
    required_car_parking_space = st.selectbox('Butuh Tempat Parkir?', [0, 1])
    room_type_reserved = st.selectbox('Jenis Kamar Dipesan', ['Room_Type 1', 'Room_Type 2', 'Room_Type 3', 'Room_Type 4', 'Room_Type 5', 'Room_Type 6', 'Room_Type 7'])
    lead_time = st.number_input('Lead Time (hari sebelum kedatangan)', min_value=0, value=30)
    arrival_year = st.selectbox('Tahun Kedatangan', [2017, 2018])
    arrival_month = st.selectbox('Bulan Kedatangan', list(range(1, 13)))
    arrival_date = st.selectbox('Tanggal Kedatangan', list(range(1, 32)))
    market_segment_type = st.selectbox('Segmen Pasar', ['Offline', 'Online', 'Corporate', 'Complementary', 'Aviation'])
    repeated_guest = st.selectbox('Tamu Pernah Menginap?', [0, 1])
    no_of_previous_cancellations = st.number_input('Jumlah Pembatalan Sebelumnya', min_value=0, value=0)
    no_of_previous_bookings_not_canceled = st.number_input('Jumlah Pemesanan Tidak Dibatalkan Sebelumnya', min_value=0, value=0)
    avg_price_per_room = st.number_input('Harga Rata-rata per Kamar (â‚¬)', min_value=0.0, value=100.0)
    no_of_special_requests = st.number_input('Jumlah Permintaan Khusus', min_value=0, value=0)

    if st.button('Make Prediction'):
        features = {
            'Booking_ID': booking_id,
            'no_of_adults': no_of_adults,
            'no_of_children': no_of_children,
            'no_of_weekend_nights': no_of_weekend_nights,
            'no_of_week_nights': no_of_week_nights,
            'type_of_meal_plan': type_of_meal_plan,
            'required_car_parking_space': required_car_parking_space,
            'room_type_reserved': room_type_reserved,
            'lead_time': lead_time,
            'arrival_year': arrival_year,
            'arrival_month': arrival_month,
            'arrival_date': arrival_date,
            'market_segment_type': market_segment_type,
            'repeated_guest': repeated_guest,
            'no_of_previous_cancellations': no_of_previous_cancellations,
            'no_of_previous_bookings_not_canceled': no_of_previous_bookings_not_canceled,
            'avg_price_per_room': avg_price_per_room,
            'no_of_special_requests': no_of_special_requests
        }

        encoded_features = encode_input(features)

        feature_order = [
            'no_of_adults',
            'no_of_children',
            'no_of_weekend_nights',
            'no_of_week_nights',
            'type_of_meal_plan',
            'required_car_parking_space',
            'room_type_reserved',
            'lead_time',
            'arrival_year',
            'arrival_month',
            'arrival_date',
            'market_segment_type_Aviation',
            'market_segment_type_Complementary',
            'market_segment_type_Corporate',
            'market_segment_type_Offline',
            'market_segment_type_Online',
            'repeated_guest',
            'no_of_previous_cancellations',
            'no_of_previous_bookings_not_canceled',
            'avg_price_per_room',
            'no_of_special_requests'
        ]

        features = [encoded_features[feat] for feat in feature_order]

        result = make_prediction(features)

        st.success(f'The prediction hotel booking status is: {"Not_Canceled" if result == 1 else "Canceled"}')


if __name__ == '__main__':
    main()
